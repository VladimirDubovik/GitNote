СОЗДАНИЕ РЕПОЗИТОРИЯ

    Создание нового репозитория

        git init
            создает новый репозиторий в текущем (рабочем) каталоге

        git init [path/directory_name]
            создает новый репозиторий в каталоге [directory_name] по адресу [path]

    Клонирование существующего репозитория

        git clone [URL]
            создает в текущем каталоге подкаталог с именем удленного репозитория и
            копирует в него все данные из удаленного репозитория

        git clone [path/directory_name]
            создает каталог [directory_name] по адресу [path] и копирует в него все данные
            из удаленного репозитория

ОТСЛЕЖИВАНИЕ ФАЙЛОВ

        Новый локальный репозиторий не содержит отслеживаемых файлов и его индекс пуст.
        Все файлы в склонированном локальном репозитории являются отслеживаемыми и
        добавленными в индекс.

    Добавление файлов в индекс

        git add [path/file_name]
            добавляет в индекс файл с именем [path/file_name]

        git add [mask]
            добавляет в индекс все файлы с именами, включенными в [mask]
                                   
        git add . | -A | -all
            добавляет в индекс все файлы в текущем каталоге и подкаталогах

    Перемещение проиндексированного файла

        Файл, добавленный в индекс, может быть перемещен и/или переименован. Git будет
        учитывать эти операции в истории изменения файла.

        git mv [scr_file_name] [dst_file_name]
            перемещает файл из подкаталога [src_path] в подкаталог [dst_path] рабочего
            каталога и/или меняет имя файл с имени [src_file_name] на имя [dst_file_name],
            может использоваться для переименования файла

    Удаление файлов из индекса

        Файл, удаленный из индекса, удаляется из репозитория

        git rm [path/file_name]
            удаляет из индекса и рабочего каталога файл с именем [path/file_name]

        git rm [mask]
            удаляет из индекса и рабочего каталога файлы с именами, включенными в [mask]

        git rm [path/file_name] --cached
            удаляет из индекса файл с именем [path/file_name], но сохраняет файл в
            рабочем каталоге

    Проверка изменений в файлах

        git status или git status --long
            выводит список файлов, которые были изменены и проиндексированы, список
            файлов, которые были изменены, но не были проиндексированы, список файлов,
            которые не были добавлены в индекс

        git status -s
            выводит аналогичные списки в сокращенной форме

        git diff
            выводит список изменений в проиндексированных файлах между последним
            сохраненным состоянием и текущим состоянием

        git diff --staged
            выводит список изменений в проиндексированных файлах между последним
            коммитом и текущим состоянием
            

СОХРАНЕНИЕ ИЗМЕНЕНИЙ / РАБОТА С КОММИТАМИ

    Создание коммита
     
        git commit
            содает коммит. В коммит будут добавлены только проиндексированные
            измеенения, т.е. только те изменения, после которых была выполнена команда
            git add. После выполнения команды будет запущен текстовый редактор для ввода
            сообщения (комментария) коммита

        git commit -a
            содает коммит, предварительно зафиксировав все изменения в индексируемых
            файлах. После выполнения команды будет запущен текстовый редактор для ввода
            сообщения (комментария) коммита

        git commit -m ["message"]
            содает коммит. В коммит будут добавлены только проиндексированные
            измеенения, т.е. только те изменения, после которых была выполнена команда
            git add. К созданному коммиту будет добавлено сообщение (комментарий)
            ["message"]
    
        git commit -am ["message"]
            содает коммит, предварительно зафиксировав все изменения в индексируемых
            файлах. К созданному коммиту будет добавлено сообщение (комментарий)
            ["message"]

        git commit [...] --ammend
            добавляет изменения в последний коммит и/или позв. отредактировать сообщение
            (комментарий) коммита

    Работа с коммитами

        git rebase [tree_name]
            выполняет перенос коммитов из текущей ветки в ветку с именем [tree_name]
        
        git rebase -i [tree_name]
            выполняет выборочный перенос коммитов из текущей ветки в ветку с именем
            [tree_name]

        git cherry-pick
            копирует изменения между коммитами

    Просмотр истории коммитов

        git log
            выводит историю коммитов в порядке от самомого последнего к самому раннему

РАБОТА С ВЕТКАМИ

    Просмотр списка веток

        git branch
            отображает список веток в локальном хранилище

        git branch -a
            отобразить общий список веток в локальном и удаленном хранилищах

        git branch -v 
            отображает список веток c коментариями и хешем

    Создание ветки

        git branch [tree_name]
            создать в локальном репозитории ветку с именем [tree_name] и остаться в
            текущей ветке

        git checkout -b [tree_name]
            создать в локальном репозитории ветку с именем [tree_name] и переключиться в
            созданную ветку

    Переключение между ветками

        git checkout [tree_name] 
            переключиться на ветку с именем [tree_name]

    Слияние веток

        git merge
            выполняет слияние одной или нескольких веток с текущей

    Удаление ветки

        git branch -d [tree_name]
            удаляет ветку с именем [tree_name], которая была слита с основной веткой

        git branch -D [tree_name]
            удаляет ветку с именем [tree_name] в любом случае

РАБОТА С УДАЛЕННЫМИ ХРАНИЛИЩАМИ

        git push origin [tree_name]
            загружает ветку [tree_name] в удаленое хранилище

        git push origin :[tree_name]
            удаляет ветку  [tree_name] из удаленого хранилища

        git push origin -f [tree_name]
            заменяет ветку [tree_name] в удаленном хранилище на ветку из лок. хранилища

        git pull origin [tree_name]
            копирует в локальное хранилище из удаленного изменения из ветки [tree_name]

        git pull -p
            удаляет из локального хранилища ветки, которые были удалены из удаленного

ГРАФИЧЕСКИЕ УТИЛИТЫ GIT

    GitK

        gitk
            отображает список коммитов, проиндексированных и непроиндексированных
            изменений в текущей ветке

        gitk -all
            отображает список коммитов, проиндексированных и непроиндексированных
            изменений во всех ветках

    Git GUI

        git gui
            отображает список проиндексированных и непроиндексированных изменений в
            индексируемых файлах в текущей ветке
